{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\ReactJS\\\\whowantstobeamillionaire\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gameState: 0,\n      // 0 =  not started, 1 = started, 2 = ended\n      round: 0,\n      question: \"\",\n      rightAnswer: \"\",\n      answers: [],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      difficulty: \"\",\n      category: \"\",\n      jokerInfo: [\"A)\", \"B)\", \"C)\", \"D)\"],\n      jokerAvailable: [false, false, false],\n      isJokerInUse: false,\n      jokerMessage: \"\",\n      buttonsVisibility: [true, true, true, true],\n      moneyByRound: [100, 200, 300, 500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 250000, 500000, 1000000]\n    };\n    this.startGame = this.startGame.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.shuffleQuestions = this.shuffleQuestions.bind(this);\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.useJoker = this.useJoker.bind(this);\n  } // end constructor()\n\n\n  render() {\n    let buttonsStyle = {\n      width: \"45vw\",\n      height: \"6vw\",\n      backgroundColor: \"#c4ebf9\",\n      fontSize: \"1.5vw\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Who Wants to Be a Millionaire?\", React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.state.gameState === 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.jokerAvailable[0] ? React.createElement(\"button\", {\n      onClick: () => this.useJoker(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"50/50\") : this.props.textOrHtml, this.state.jokerAvailable[1] ? React.createElement(\"button\", {\n      onClick: () => this.useJoker(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Audience\") : this.props.textOrHtml, this.state.jokerAvailable[2] ? React.createElement(\"button\", {\n      onClick: () => this.useJoker(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Friend\") : this.props.textOrHtml) : this.props.textOrHtml), this.state.gameState !== 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Category: \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.category, \" (\", this.state.difficulty, \")\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.question), React.createElement(\"h4\", {\n      style: {\n        color: \"#242424\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"A question for \", this.state.moneyByRound[this.state.round - 1], \"$\"), this.state.buttonsVisibility[0] ? React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"A) \", this.state.answers[0]) : this.props.textOrHtml, this.state.buttonsVisibility[1] ? React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"B) \", this.state.answers[1]) : this.props.textOrHtml, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.state.buttonsVisibility[2] ? React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"C) \", this.state.answers[2]) : this.props.textOrHtml, this.state.buttonsVisibility[3] ? React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"D) \", this.state.answers[3]) : this.props.textOrHtml, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round === 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \"You won 0$\") : this.props.textOrHtml, this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round > 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \"You won \", React.createElement(\"font\", {\n      style: {\n        color: \"green\",\n        fontSize: \"3vmin\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.moneyByRound[this.state.round - 2], \"$\")) : this.props.textOrHtml, this.state.gameState === 2 && this.state.rightAnswerIndex === this.state.selectedAnswer ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"You won \", React.createElement(\"font\", {\n      style: {\n        color: \"green\",\n        fontSize: \"4vmin\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.moneyByRound[this.state.round - 1], \"$\")) : this.props.textOrHtml, this.state.gameState === 1 && this.state.round <= 15 && this.state.isAnswerSelected ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        width: \"20vmin\",\n        height: \"5vmin\",\n        fontSize: \"2vmin\"\n      },\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Next Question\")) : this.props.textOrHtml) : this.props.textOrHtml, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), this.state.gameState !== 1 ? React.createElement(\"button\", {\n      style: {\n        width: \"20vmin\",\n        height: \"5vmin\",\n        fontSize: \"2vmin\"\n      },\n      onClick: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"NEW GAME\") : this.props.textOrHtml);\n  } // end render()\n\n\n  startGame() {\n    this.setState({\n      gameState: 1,\n      // started\n      jokerAvailable: [true, true, true],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: 0\n    });\n    this.nextQuestion();\n  } // end startGame()\n\n\n  nextQuestion() {\n    let round = this.state.round;\n    let apiURL = \"\";\n\n    if (round < 5) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple\";\n    } else if (round < 10) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=medium&type=multiple\";\n    } else {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=hard&type=multiple\";\n    }\n\n    fetch(apiURL).then(response => response.json()).then(data => this.setState({\n      rightAnswer: data.results[0].correct_answer,\n      answers: data.results[0].incorrect_answers,\n      question: data.results[0].question,\n      difficulty: data.results[0].difficulty,\n      category: data.results[0].category,\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: this.state.round + 1,\n      isJokerInUse: false,\n      buttonsVisibility: [true, true, true, true]\n    })).then(this.shuffleQuestions);\n  } // end nextQuestion()\n\n\n  shuffleQuestions() {\n    const randomNumber = Math.floor(Math.random() * 4) + 1;\n    let shuffledAnswers = this.state.answers;\n    shuffledAnswers.splice(randomNumber - 1, 0, this.state.rightAnswer);\n    this.setState({\n      rightAnswerIndex: randomNumber - 1,\n      answers: shuffledAnswers\n    });\n    console.log(\"Right answer: \" + this.state.rightAnswer\n    /* + \"\\nIndex: \" + this.state.rightAnswerIndex*/\n    );\n  } // end shuffleQuestions()\n\n\n  selectAnswer(index) {\n    if (!this.state.isAnswerSelected && this.state.gameState === 1 && this.state.round <= 15) {\n      if (this.state.rightAnswerIndex === index) {\n        this.setState({\n          totalMoney: this.state.totalMoney + this.state.moneyByRound[this.state.round - 1],\n          selectedAnswer: index,\n          isAnswerSelected: true\n        });\n\n        if (this.state.round === 15) {\n          this.setState({\n            gameState: 2\n          });\n        }\n      } else {\n        this.setState({\n          selectedAnswer: index,\n          gameState: 2,\n          isAnswerSelected: true\n        });\n      }\n    }\n  } // end selectedAnswer()\n\n\n  useJoker(jokerIndex) {\n    let message = \"\";\n\n    if (jokerIndex === 0) {\n      let bVisibility = this.state.buttonsVisibility;\n      let jokerAvailable = this.state.jokerAvailable;\n      jokerAvailable.splice(jokerIndex, 1, false);\n\n      switch (this.state.rightAnswerIndex) {\n        case 1:\n        case 2:\n          bVisibility.splice(0, 1, false);\n          bVisibility.splice(3, 1, false);\n          break;\n\n        default:\n          // 0 и 3 - първи и четвърти въпрос\n          bVisibility.splice(1, 1, false);\n          bVisibility.splice(2, 1, false);\n      }\n\n      this.setState({\n        isJokerInUse: true,\n        jokerAvailable: jokerAvailable,\n        buttonsVisibility: bVisibility\n      });\n    } else if (jokerIndex === 1) {} else if (jokerIndex === 2) {}\n  }\n\n} // end App{}\n\n\nexport default App;","map":{"version":3,"sources":["E:\\Workspace\\ReactJS\\whowantstobeamillionaire\\src\\App.js"],"names":["React","App","Component","constructor","state","gameState","round","question","rightAnswer","answers","rightAnswerIndex","selectedAnswer","isAnswerSelected","difficulty","category","jokerInfo","jokerAvailable","isJokerInUse","jokerMessage","buttonsVisibility","moneyByRound","startGame","bind","nextQuestion","shuffleQuestions","selectAnswer","useJoker","render","buttonsStyle","width","height","backgroundColor","fontSize","logo","props","textOrHtml","color","setState","apiURL","fetch","then","response","json","data","results","correct_answer","incorrect_answers","randomNumber","Math","floor","random","shuffledAnswers","splice","console","log","index","totalMoney","jokerIndex","message","bVisibility"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      gameState: 0, // 0 =  not started, 1 = started, 2 = ended\n      round: 0,\n      question: \"\",\n      rightAnswer: \"\",\n      answers: [],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      difficulty: \"\",\n      category: \"\",\n      jokerInfo: [\"A)\", \"B)\", \"C)\", \"D)\"],\n      jokerAvailable: [false, false, false],\n      isJokerInUse: false,\n      jokerMessage: \"\",\n      buttonsVisibility: [true, true, true, true],\n      moneyByRound: [100, 200, 300, 500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 250000, 500000, 1000000]\n    }\n\n    this.startGame = this.startGame.bind(this)\n    this.nextQuestion = this.nextQuestion.bind(this)\n    this.shuffleQuestions = this.shuffleQuestions.bind(this)\n    this.selectAnswer = this.selectAnswer.bind(this)\n    this.useJoker = this.useJoker.bind(this)\n  } // end constructor()\n\n  render(){\n\n    let buttonsStyle = {\n      width: \"45vw\",\n      height: \"6vw\",\n      backgroundColor: \"#c4ebf9\",\n      fontSize: \"1.5vw\"\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Who Wants to Be a Millionaire?\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          {\n            this.state.gameState === 1\n            ?\n            <div>\n              {\n                this.state.jokerAvailable[0]\n                ?\n                <button onClick={() => this.useJoker(0)}>50/50</button>\n                :\n                this.props.textOrHtml\n              }\n\n              {\n                this.state.jokerAvailable[1]\n                ?\n                <button onClick={() => this.useJoker(1)}>Audience</button>\n                :\n                this.props.textOrHtml\n              }\n\n              {\n                this.state.jokerAvailable[2]\n                ?\n                <button onClick={() => this.useJoker(2)}>Friend</button>\n                :\n                this.props.textOrHtml\n              }\n            </div>\n            :\n            this.props.textOrHtml\n          }\n\n        </header>\n        {\n          this.state.gameState !== 0 ?\n          <div>\n\n            <h3 style={{color: \"black\"}}>Category: <b>{this.state.category} ({this.state.difficulty})</b></h3>\n            <h2>{this.state.question}</h2>\n            <h4 style={{color: \"#242424\"}}>A question for {this.state.moneyByRound[this.state.round-1]}$</h4>\n\n            {\n              this.state.buttonsVisibility[0] ? \n              <button style={buttonsStyle} onClick={() => this.selectAnswer(0)}>A) {this.state.answers[0]}</button>\n              : this.props.textOrHtml\n            }\n\n            {\n              this.state.buttonsVisibility[1] ? \n              <button style={buttonsStyle} onClick={() => this.selectAnswer(1)}>B) {this.state.answers[1]}</button>\n              : this.props.textOrHtml\n            }\n            <br/>\n\n            {\n              this.state.buttonsVisibility[2] ? \n              <button style={buttonsStyle} onClick={() => this.selectAnswer(2)}>C) {this.state.answers[2]}</button>\n              : this.props.textOrHtml\n            }\n\n            {\n              this.state.buttonsVisibility[3] ? \n              <button style={buttonsStyle} onClick={() => this.selectAnswer(3)}>D) {this.state.answers[3]}</button>\n              : this.props.textOrHtml\n            }\n            <br/>\n\n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round === 1\n              ?\n              <div><br/>You won 0$</div>\n              :\n              this.props.textOrHtml\n            }\n            \n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round > 1\n              ?\n              <div><br/>You won <font style={{color: \"green\", fontSize: \"3vmin\"}}>{this.state.moneyByRound[this.state.round-2]}$</font></div>\n              :\n              this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex === this.state.selectedAnswer\n              ?\n              <div><br/>You won <font style={{color: \"green\", fontSize: \"4vmin\"}}>{this.state.moneyByRound[this.state.round-1]}$</font></div>\n              :\n              this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 1 && this.state.round <= 15 && this.state.isAnswerSelected\n              ?\n              <div><br/><button style={{width: \"20vmin\", height: \"5vmin\", fontSize: \"2vmin\"}} onClick={this.nextQuestion}>Next Question</button></div>\n              :\n              this.props.textOrHtml\n            }\n\n          </div>\n          :\n          this.props.textOrHtml\n        }\n\n        <br/>\n\n        {\n          this.state.gameState !== 1 ? <button style={{width: \"20vmin\", height: \"5vmin\", fontSize: \"2vmin\"}} onClick={this.startGame}>NEW GAME</button> : this.props.textOrHtml\n        }\n  \n      </div>\n    )\n  } // end render()\n\n  startGame(){\n    this.setState({\n      gameState: 1, // started\n      jokerAvailable: [true, true, true],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: 0\n    })\n\n    this.nextQuestion()\n  } // end startGame()\n\n  nextQuestion(){\n    let round = this.state.round\n    let apiURL = \"\"\n    if(round < 5) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple\"\n    } else if(round < 10) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=medium&type=multiple\"\n    } else {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=hard&type=multiple\"\n    }\n\n    fetch(apiURL)\n      .then(response => response.json())\n      .then(data => this.setState({\n        rightAnswer: data.results[0].correct_answer,\n        answers: data.results[0].incorrect_answers,\n        question: data.results[0].question,\n        difficulty: data.results[0].difficulty,\n        category: data.results[0].category,\n        rightAnswerIndex: 999,\n        selectedAnswer: 999,\n        isAnswerSelected: false,\n        round: this.state.round+1,\n        isJokerInUse: false,\n        buttonsVisibility: [true, true, true, true]\n      }))\n      .then(this.shuffleQuestions)\n  } // end nextQuestion()\n  \n  shuffleQuestions(){\n    const randomNumber = Math.floor(Math.random() * 4) + 1\n    let shuffledAnswers = this.state.answers\n    shuffledAnswers.splice(randomNumber-1, 0, this.state.rightAnswer)\n    this.setState({\n      rightAnswerIndex: randomNumber-1,\n      answers: shuffledAnswers\n    })\n    console.log(\"Right answer: \" + this.state.rightAnswer/* + \"\\nIndex: \" + this.state.rightAnswerIndex*/)\n  } // end shuffleQuestions()\n\n  selectAnswer(index){\n    if(!this.state.isAnswerSelected && this.state.gameState === 1 && this.state.round <= 15){\n      if(this.state.rightAnswerIndex === index){\n        this.setState({\n          totalMoney: this.state.totalMoney + this.state.moneyByRound[this.state.round-1],\n          selectedAnswer: index,\n          isAnswerSelected: true\n        })\n        if(this.state.round === 15){\n          this.setState({\n            gameState: 2\n          })\n        }\n      } else {\n        this.setState({\n          selectedAnswer: index,\n          gameState: 2,\n          isAnswerSelected: true\n        })\n      }\n    }\n  } // end selectedAnswer()\n\n  useJoker(jokerIndex){\n\n    let message = \"\"\n\n    if(jokerIndex === 0){\n\n      let bVisibility = this.state.buttonsVisibility\n      let jokerAvailable = this.state.jokerAvailable\n      jokerAvailable.splice(jokerIndex, 1, false)\n\n      switch(this.state.rightAnswerIndex){\n        case 1:\n        case 2:\n          bVisibility.splice(0, 1, false)\n          bVisibility.splice(3, 1, false)\n          break\n        default: // 0 и 3 - първи и четвърти въпрос\n          bVisibility.splice(1, 1, false)\n          bVisibility.splice(2, 1, false)\n      }\n\n      this.setState({\n        isJokerInUse: true,\n        jokerAvailable: jokerAvailable,\n        buttonsVisibility : bVisibility\n      })\n    } else if(jokerIndex === 1){\n\n    } else if(jokerIndex === 2){\n\n    }\n  }\n\n} // end App{}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}