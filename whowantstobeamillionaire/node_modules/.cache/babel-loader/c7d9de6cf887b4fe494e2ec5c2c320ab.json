{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\ReactJS\\\\whowantstobeamillionaire\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      gameState: 0,\n      // 0 =  not started, 1 = started, 2 = ended\n      round: 0,\n      question: \"\",\n      rightAnswer: \"\",\n      answers: [],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      difficulty: \"\",\n      category: \"\",\n      jokerInfo: [\"A)\", \"B)\", \"C)\", \"D)\"],\n      jokerAvailable: [false, false, false],\n      moneyByRound: [100, 200, 300, 500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 250000, 500000, 1000000]\n    };\n    this.startGame = this.startGame.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.shuffleQuestions = this.shuffleQuestions.bind(this);\n    this.selectAnswer = this.selectAnswer.bind(this);\n  } // end constructor()\n\n\n  render() {\n    let buttonsStyle = {\n      width: \"40vmin\",\n      height: \"10vmin\",\n      backgroundColor: \"#c4ebf9\",\n      fontSize: \"2vmin\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Who Wants to Be a Millionaire?\", React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), this.state.gameState !== 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Category: \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.category, \" (\", this.state.difficulty, \")\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.question), React.createElement(\"h4\", {\n      style: {\n        color: \"#242424\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"A question for \", this.state.moneyByRound[this.state.round - 1], \"$\"), React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"A) \", this.state.answers[0]), React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"B) \", this.state.answers[1]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"C) \", this.state.answers[2]), React.createElement(\"button\", {\n      style: buttonsStyle,\n      onClick: () => this.selectAnswer(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"D) \", this.state.answers[3]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round === 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"You won 0$\") : this.props.textOrHtml, this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round > 1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"You won \", React.createElement(\"font\", {\n      style: {\n        color: \"green\",\n        fontSize: \"3vmin\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.moneyByRound[this.state.round - 2], \"$\")) : this.props.textOrHtml, this.state.gameState === 2 && this.state.rightAnswerIndex === this.state.selectedAnswer ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"You won \", React.createElement(\"font\", {\n      style: {\n        color: \"green\",\n        fontSize: \"4vmin\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.moneyByRound[this.state.round - 1], \"$\")) : this.props.textOrHtml, this.state.gameState === 1 && this.state.round <= 15 && this.state.isAnswerSelected ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        width: \"20vmin\",\n        height: \"5vmin\",\n        fontSize: \"2vmin\"\n      },\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Next Question\")) : this.props.textOrHtml) : this.props.textOrHtml, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state.gameState !== 1 ? React.createElement(\"button\", {\n      style: {\n        width: \"20vmin\",\n        height: \"5vmin\",\n        fontSize: \"2vmin\"\n      },\n      onClick: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"NEW GAME\") : this.props.textOrHtml);\n  } // end render()\n\n\n  startGame() {\n    this.setState({\n      gameState: 1,\n      // started\n      jokerAvailable: [true, true, true],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: 0\n    });\n    this.nextQuestion();\n  } // end startGame()\n\n\n  nextQuestion() {\n    let round = this.state.round;\n    let apiURL = \"\";\n\n    if (round < 5) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple\";\n    } else if (round < 10) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=medium&type=multiple\";\n    } else {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=hard&type=multiple\";\n    }\n\n    fetch(apiURL).then(response => response.json()).then(data => this.setState({\n      rightAnswer: data.results[0].correct_answer,\n      answers: data.results[0].incorrect_answers,\n      question: data.results[0].question,\n      difficulty: data.results[0].difficulty,\n      category: data.results[0].category,\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: this.state.round + 1\n    })).then(this.shuffleQuestions);\n  } // end nextQuestion()\n\n\n  shuffleQuestions() {\n    const randomNumber = Math.floor(Math.random() * 4) + 1;\n    let shuffledAnswers = this.state.answers;\n    shuffledAnswers.splice(randomNumber - 1, 0, this.state.rightAnswer);\n    this.setState({\n      rightAnswerIndex: randomNumber - 1,\n      answers: shuffledAnswers\n    });\n    console.log(\"Right answer: \" + this.state.rightAnswer + \"\\nOn Index: \" + this.state.rightAnswerIndex);\n  } // end shuffleQuestions()\n\n\n  selectAnswer(index) {\n    if (!this.state.isAnswerSelected && this.state.gameState === 1 && this.state.round <= 15) {\n      if (this.state.rightAnswerIndex === index) {\n        this.setState({\n          totalMoney: this.state.totalMoney + this.state.moneyByRound[this.state.round - 1],\n          selectedAnswer: index,\n          isAnswerSelected: true\n        });\n\n        if (this.state.round === 15) {\n          this.setState({\n            gameState: 2\n          });\n        }\n      } else {\n        this.setState({\n          selectedAnswer: index,\n          gameState: 2,\n          isAnswerSelected: true\n        });\n      }\n    }\n  } // end selectedAnswer()\n\n\n} // end App{}\n\n\nexport default App;","map":{"version":3,"sources":["E:\\Workspace\\ReactJS\\whowantstobeamillionaire\\src\\App.js"],"names":["React","App","Component","constructor","state","gameState","round","question","rightAnswer","answers","rightAnswerIndex","selectedAnswer","isAnswerSelected","difficulty","category","jokerInfo","jokerAvailable","moneyByRound","startGame","bind","nextQuestion","shuffleQuestions","selectAnswer","render","buttonsStyle","width","height","backgroundColor","fontSize","logo","color","props","textOrHtml","setState","apiURL","fetch","then","response","json","data","results","correct_answer","incorrect_answers","randomNumber","Math","floor","random","shuffledAnswers","splice","console","log","index","totalMoney"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      gameState: 0, // 0 =  not started, 1 = started, 2 = ended\n      round: 0,\n      question: \"\",\n      rightAnswer: \"\",\n      answers: [],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      difficulty: \"\",\n      category: \"\",\n      jokerInfo: [\"A)\", \"B)\", \"C)\", \"D)\"],\n      jokerAvailable: [false, false, false],\n      moneyByRound: [100, 200, 300, 500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 250000, 500000, 1000000]\n    }\n\n    this.startGame = this.startGame.bind(this)\n    this.nextQuestion = this.nextQuestion.bind(this)\n    this.shuffleQuestions = this.shuffleQuestions.bind(this)\n    this.selectAnswer = this.selectAnswer.bind(this)\n  } // end constructor()\n\n  render(){\n\n    let buttonsStyle = {\n      width: \"40vmin\",\n      height: \"10vmin\",\n      backgroundColor: \"#c4ebf9\",\n      fontSize: \"2vmin\"\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Who Wants to Be a Millionaire?\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        {\n          this.state.gameState !== 0 ?\n          <div>\n\n            <h3 style={{color: \"black\"}}>Category: <b>{this.state.category} ({this.state.difficulty})</b></h3>\n            <h2>{this.state.question}</h2>\n            <h4 style={{color: \"#242424\"}}>A question for {this.state.moneyByRound[this.state.round-1]}$</h4>\n\n            <button style={buttonsStyle} onClick={() => this.selectAnswer(0)}>A) {this.state.answers[0]}</button>\n            <button style={buttonsStyle} onClick={() => this.selectAnswer(1)}>B) {this.state.answers[1]}</button>\n            <br/>\n            <button style={buttonsStyle} onClick={() => this.selectAnswer(2)}>C) {this.state.answers[2]}</button>\n            <button style={buttonsStyle} onClick={() => this.selectAnswer(3)}>D) {this.state.answers[3]}</button>\n            <br/>\n\n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round === 1\n              ?\n              <div><br/>You won 0$</div>\n              :\n              this.props.textOrHtml\n            }\n            \n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex !== this.state.selectedAnswer && this.state.round > 1\n              ?\n              <div><br/>You won <font style={{color: \"green\", fontSize: \"3vmin\"}}>{this.state.moneyByRound[this.state.round-2]}$</font></div>\n              :\n              this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 2 && this.state.rightAnswerIndex === this.state.selectedAnswer\n              ?\n              <div><br/>You won <font style={{color: \"green\", fontSize: \"4vmin\"}}>{this.state.moneyByRound[this.state.round-1]}$</font></div>\n              :\n              this.props.textOrHtml\n            }\n\n            {\n              this.state.gameState === 1 && this.state.round <= 15 && this.state.isAnswerSelected\n              ?\n              <div><br/><button style={{width: \"20vmin\", height: \"5vmin\", fontSize: \"2vmin\"}} onClick={this.nextQuestion}>Next Question</button></div>\n              :\n              this.props.textOrHtml\n            }\n\n          </div>\n          :\n          this.props.textOrHtml\n        }\n\n        <br/>\n\n        {\n          this.state.gameState !== 1 ? <button style={{width: \"20vmin\", height: \"5vmin\", fontSize: \"2vmin\"}} onClick={this.startGame}>NEW GAME</button> : this.props.textOrHtml\n        }\n  \n      </div>\n    )\n  } // end render()\n\n  startGame(){\n    this.setState({\n      gameState: 1, // started\n      jokerAvailable: [true, true, true],\n      rightAnswerIndex: 999,\n      selectedAnswer: 999,\n      isAnswerSelected: false,\n      round: 0\n    })\n\n    this.nextQuestion()\n  } // end startGame()\n\n  nextQuestion(){\n    let round = this.state.round\n    let apiURL = \"\"\n    if(round < 5) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple\"\n    } else if(round < 10) {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=medium&type=multiple\"\n    } else {\n      apiURL = \"https://opentdb.com/api.php?amount=1&difficulty=hard&type=multiple\"\n    }\n\n    fetch(apiURL)\n      .then(response => response.json())\n      .then(data => this.setState({\n        rightAnswer: data.results[0].correct_answer,\n        answers: data.results[0].incorrect_answers,\n        question: data.results[0].question,\n        difficulty: data.results[0].difficulty,\n        category: data.results[0].category,\n        rightAnswerIndex: 999,\n        selectedAnswer: 999,\n        isAnswerSelected: false,\n        round: this.state.round+1\n      }))\n      .then(this.shuffleQuestions)\n  } // end nextQuestion()\n  \n  shuffleQuestions(){\n    const randomNumber = Math.floor(Math.random() * 4) + 1\n    let shuffledAnswers = this.state.answers\n    shuffledAnswers.splice(randomNumber-1, 0, this.state.rightAnswer)\n    this.setState({\n      rightAnswerIndex: randomNumber-1,\n      answers: shuffledAnswers\n    })\n    console.log(\"Right answer: \" + this.state.rightAnswer + \"\\nOn Index: \" + this.state.rightAnswerIndex)\n  } // end shuffleQuestions()\n\n  selectAnswer(index){\n    if(!this.state.isAnswerSelected && this.state.gameState ===1 && this.state.round <= 15){\n      if(this.state.rightAnswerIndex === index){\n        this.setState({\n          totalMoney: this.state.totalMoney + this.state.moneyByRound[this.state.round-1],\n          selectedAnswer: index,\n          isAnswerSelected: true\n        })\n        if(this.state.round === 15){\n          this.setState({\n            gameState: 2\n          })\n        }\n      } else {\n        this.setState({\n          selectedAnswer: index,\n          gameState: 2,\n          isAnswerSelected: true\n        })\n      }\n    }\n  } // end selectedAnswer()\n\n} // end App{}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}